<?xml version="1.0" encoding="utf-8" ?>
<view:BaseContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                      xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                      xmlns:view="clr-namespace:TimesheetApp.View"
                      xmlns:vm="clr-namespace:TimesheetApp.ViewModel.Page"
                      xmlns:ts="clr-namespace:TimesheetApp.Controls.Timesheet"
                      xmlns:controls="clr-namespace:TimesheetApp.Controls"
                      xmlns:mtly="clr-namespace:TimesheetApp.Controls.Monthly"
                      xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                      
                      x:Class="TimesheetApp.View.Page.CalendarPage"
                      x:DataType="vm:CalendarViewModel">
    <Grid RowDefinitions="auto, 2.5*, 7.5*, auto">
        <!-- Header -->
        <Border Style="{StaticResource HeaderBorder}">
            <Label Text="{Binding CurrentMonth, StringFormat='{0:MMMM yyyy}'}"
                   Style="{StaticResource TitleLabel}" />
        </Border>

        <Border Grid.Row="1"
                Style="{StaticResource TopPageBorder}"
                Margin="12, -20, 12, 12"
                VerticalOptions="Fill">
            <!-- CurrentMonth amounts -->
            <CollectionView ItemsSource="{Binding Amounts}"
                            IsEnabled="False"
                            ItemTemplate="{StaticResource HorizontalAmountsTemplate}"
                            VerticalOptions="Center">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical"
                                     Span="3" />
                </CollectionView.ItemsLayout>
                <CollectionView.Resources>
                    <ResourceDictionary Source="../../Resources/Templates/Amounts/AmountsControlTemplates.xaml" />
                </CollectionView.Resources>
            </CollectionView>
        </Border>

        <Grid Grid.Row="2"
              RowDefinitions="auto, *" >
            <!-- custom control to wrap "base" indicator view with icons -->
            <controls:IconIndicatorView Grid.Row="0"
                                        Position="{Binding Source={x:Reference carousel}, Path=Position}">
                <controls:IconIndicatorView.ItemsSource>
                    <x:Array Type="{x:Type x:String}">
                        <x:String>../../Resources/Images/calendar.png</x:String>
                        <x:String>../../Resources/Images/list.png</x:String>
                    </x:Array>
                </controls:IconIndicatorView.ItemsSource>
                <controls:IconIndicatorView.ItemTemplate>
                    <DataTemplate x:DataType="{x:Type x:String}">
                        <Image Source="{Binding }"
                               Margin="8, 0"
                               HeightRequest="20"
                               Style="{StaticResource IndicatorImage}">
                            <Image.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                            </Image.Behaviors>
                        </Image>
                    </DataTemplate>
                </controls:IconIndicatorView.ItemTemplate>
            </controls:IconIndicatorView>

            <CarouselView Grid.Row="1"
                          Loop="False"
                          Margin="4"
                          x:Name="carousel">
                <CarouselView.ItemsSource>
                    <x:Array Type="{x:Type ContentView}">
                        <!-- Calendar control -->
                        <mtly:CalendarControl TimeSheets="{Binding Source={RelativeSource AncestorType={x:Type CarouselView}}, Path=BindingContext.TimeSheets}"
                                              Month="{Binding Source={RelativeSource AncestorType={x:Type CarouselView}}, Path=BindingContext.CurrentMonth.Date}" />
                        
                        <!-- Timesheets list -->
                        <mtly:TimesheetsList TimeSheets="{Binding Source={RelativeSource AncestorType={x:Type CarouselView}}, Path=BindingContext.TimeSheets}" />
                    </x:Array>
                </CarouselView.ItemsSource>
                <CarouselView.ItemTemplate>
                    <DataTemplate x:DataType="{x:Type ContentView}">
                        <ContentView Content="{Binding }" />
                    </DataTemplate>
                </CarouselView.ItemTemplate>
            </CarouselView>
        </Grid>
        
        <Grid Grid.Row="3"
              ColumnDefinitions="5*, 5*">
            <Grid.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MainButton}">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray200}}" />
                    <Setter Property="Margin" Value="6, 4" />
                </Style>

                <Style TargetType="{x:Type HorizontalStackLayout}">
                    <Setter Property="HorizontalOptions" Value="Center" />
                    <Setter Property="VerticalOptions" Value="Center" />
                    <Setter Property="CascadeInputTransparent" Value="True" />
                </Style>
            </Grid.Resources>

            <!-- Previous month button -->
            <Button Grid.Column="0"
                    Text="{Binding CurrentMonth, Converter={StaticResource CalendarButtonConverter}, ConverterParameter={StaticResource False}}"
                    Command="{Binding ChangeMonthCommand}" 
                    CommandParameter="{StaticResource False}" 
                    Margin="12, 4, 6, 4"/>

            <!-- Next month button -->
            <Button Grid.Column="1"
                    Text="{Binding CurrentMonth, Converter={StaticResource CalendarButtonConverter}, ConverterParameter={StaticResource True}}"
                    Command="{Binding ChangeMonthCommand}"
                    CommandParameter="{StaticResource True}" 
                    Margin="6, 4, 12, 4"/>
        </Grid>
    </Grid>
</view:BaseContentPage>